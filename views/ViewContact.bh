#!/bin/bash

# shopt -s expand_aliases

viewContact.set()
{
    export TMPCOLLIPS="${TMP}/tmp_collips.txt"
    TMPVIEW1="${TMP}/tmp_view1.txt"
    TMPVIEW2="${TMP}/tmp_view2.txt"
    TMPVIEW3="${TMP}/tmp_view3.txt"
    TMPVIEW4="${TMP}/tmp_view4.txt"
    TMPFIELD="${TMP}/tmp_field.txt"
    # TMPFILE="../var/tmp/tmp_sort.txt"

    LINESTART=1
    LINEEND=30
    NLINE=30
    SFLD=1
    TOUPDATE=true
    ORDER=a
    ORDERSTR="Ascending"

    touch "$TMPCOLLIPS"
    touch "$TMPVIEW1"
    touch "$TMPVIEW2"
    touch "$TMPVIEW3"
    touch "$TMPVIEW4"
    touch "$TMPFIELD"
}

viewContact.unset()
{
    rm "$TMPCOLLIPS"
    rm "$TMPVIEW1"
    rm "$TMPVIEW2"
    rm "$TMPVIEW3"
    rm "$TMPVIEW4"
    rm "$TMPFIELD"

    unset TMPCOLLIPS TMPVIEW1 TMPVIEW2 TMPVIEW3 TMPFIELD
    unset LINEEND NLINE
}

viewContact.readKey()
{
    TOUPDATE=false
    # reads 1 character only and silent mode
    read -s -n1 KEY
    case $KEY in
        n)
            if [ $LINEEND -le $LNUM ]; then
                (( LINEEND += $NLINE ))
                (( LINESTART += $NLINE ))
            fi
        ;;
        b)
            if [ $LINEEND -gt $NLINE ]; then
                (( LINEEND -= $NLINE ))
                (( LINESTART -= $NLINE ))
            fi
        ;;
        q)
            APPSTATE=$AppState_MENU
        ;;
        [1-9])
            SFLD=$KEY
            TOUPDATE=true
        ;;
        0)
            SFLD=10
            TOUPDATE=true
        ;;
        -)
            SFLD=11
            TOUPDATE=true
        ;;
        '`')
            TOUPDATE=true
            if [ "$ORDER" = a ]; then
                ORDER=d
                ORDERSTR="Descending"
            elif [ "$ORDER" = d ]; then
                ORDER=a
                ORDERSTR="Ascending"
            fi
        ;;
        h)
            clear
            toilet --gay "HELP"
            local CHARS=( 1 2 3 4 5 6 7 8 9 0 '-')
            echo -ne "\t"
            echo '` => Reverse Sorting Order (Ascending/Descending)'
            for (( i=0; i<$Con_NUM; i++)); do
                echo -e "\t${CHARS[$i]} => Sort by ${Con_ALL[$i]}"
            done
            echo -e "\tb => Go Back To Previous Page"
            echo -e "\tn => Go To Next Page"
            echo -e "\tq => Quit"
            while read -s -n1 KEY; do
                if [ "$KEY" = "q" ]; then
                    break
                fi
            done
        ;;
    esac
}

ViewContact.Show()
{
    viewContact.set

    echo "ViewContact"

    # 1 Contact per line

    # While nasa view contacts yung apAplication

    ALL=$(viewContact ${Con_ALL[*]})

    # get total line number
    LNUM=$(echo "$ALL" | wc -l)

    (( NFIELD=$LNUM-1 ))

    HEADFIELD=$(echo "$ALL" | head -1 )
    ALL=$(echo "$ALL" | tail -"$NFIELD")

    while [ $APPSTATE -eq $AppState_VIEW ]; do
        clear

        # DITO UNG PAGPILI KUNG ANONG FIELD UNG ISOSORT (1-based)
        # kunyare firstname
        # echo "$ALL" | cut -f2 -d: > "$TMPFIELD"
        # kunyare email
        # echo "$ALL" | cut -f7 -d: > "$TMPFIELD"
        # kunyare address
        # echo "$ALL" | cut -f8 -d: > "$TMPFIELD"
        # kunyare city
        # echo "$ALL" | cut -f9 -d: > "$TMPFIELD"

        if $TOUPDATE; then

            # perform sort on the fields and get sorted line numbers
            echo "$ALL" | cut -f"$SFLD" -d: > "$TMPFIELD"
            SORTEDLINES=( $(sort.bash "$TMPFIELD" "$ORDER") )

            # dito pinapa-iksi ung mahahaba
            echo "$ALL" | cut -f1 -d: > "$TMPVIEW1"
            for i in $(seq 2 $Con_NUM); do

                # ilagay sa TMPCOLLIPS file ung i-cocollips
                echo "$ALL" | cut -f"$i" -d: > "$TMPCOLLIPS"

                # lagay sa 2
                collips 20 > "$TMPVIEW2"

                # paste 1 at 2, lagay sa 1
                echo "$(paste "$TMPVIEW1" "$TMPVIEW2" -d:)" > "$TMPVIEW1"

            done

            # dito kinukuha ung sorted rows for the generated sorted lines
            echo -n > "$TMPVIEW4"
            for i in $(seq 0 $(($LNUM - 1)));do
                 sed "${SORTEDLINES[$i]}q;d" "$TMPVIEW1" >> "$TMPVIEW4"
            done
        fi

        # dito ung parang page bla bla
        LINELAST=$LINEEND
        if [ $LINEEND -gt $LNUM ]; then
            (( LINELAST = $LNUM - 1 ))
        fi

        echo "$HEADFIELD" > "$TMPVIEW3"; echo >> "$TMPVIEW3"
        (sed -n "${LINESTART},${LINELAST}p" < "$TMPVIEW4") >> "$TMPVIEW3"
        cat "$TMPVIEW3" | column -t -s: -e

        SORTEDFIELD=$(echo "$HEADFIELD" | cut -f"$SFLD" -d":")
        echo; echo "Sorted $ORDERSTR by [$SORTEDFIELD]";
        echo "Showing line ${LINESTART}-${LINELAST} out of $((LNUM-1))"

        viewContact.readKey
    done

    Menu.AnyKey

    viewContact.unset
}
