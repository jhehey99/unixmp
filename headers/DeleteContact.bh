#!/bin/bash




DeleteContact.Show()
{
    echo;echo;
    echo "###################################################################################################################################################";
    echo;

    echo "[ Type \"//a\" to delete all | \"//c\" to cancel ]"
    echo "[ Multiple IDs are separated by spaces ex. 10 20 ]"
    echo "[ You can delete by range ex. 10-20 ]"
    echo
    echo -ne "\t\tEnter IDs to delete: "

    read IDSTODELETE

    if echo "$IDSTODELETE" | grep -E "[0-9]+[-][0-9]+"; then
        LOW=$(echo "$IDSTODELETE" | cut -f1 -d"-")
        HIGH=$(echo "$IDSTODELETE" | cut -f2 -d"-")

        if [ $LOW -le $HIGH ]; then
            deleteContactsByRange "$IDSTODELETE"
            ViewContact.AnyKeyToView
            return
        else
            log "Invalid Range"
        fi
    fi

    case "$IDSTODELETE" in
        "//c")
            APPSTATE=$AppState_VIEW
            return
        ;;
        "//a")
            echo -n "ARE YOU SURE? [Y/N]"
            read SURE
            case "$SURE" in
                [yY])
                    echo -n "ARE YOU REALLY SURE? [Y/N]"
                    read SURESURE
                    case "$SURESURE" in
                        [yY])
                            deleteAll
                        ;;
                    esac
                ;;
            esac
        ;;
        *) # by list
            # removes leading zeros, dapat integers lang
            VALIDIDS=($(echo "$IDSTODELETE" | grep -wo "[0-9]*" | sed "s/^0*//g" | sort -u))
            echo "Here are the valid IDs to be deleted: ${VALIDIDS[*]}"
            IDLIST=$(echo "${VALIDIDS[*]}" | sed "s/ /, /g")
            deleteContactByList "$IDLIST"
        ;;
    esac

    ViewContact.AnyKeyToView
}




# 1 2 3 1 2 3 01 02 03 001 002 003 ha 493a f9das 9w k22k093 4k023 8sdf98ksd j54319 jk9sdv08k 28f













































#
# deleteContact.set()
# {
#     ID=; IDS=;
#     TOVIEW=( $Con_ID $Con_FN $Con_LN )
# }
#
# deleteContact.unset()
# {
#     unset ID IDS TOVIEW
# }
#
# DeleteContact.Show()
# {
#     log -q "App in DeleteContact..."
#     deleteContact.set
#
#     # Get list of IDs, space separated to, hindi array
#     IDS=$(viewContact $Con_ID)
#     echo $IDS
#
#     # read ID
#     # viewContact ${TOVIEW[*]}
#     echo -n "Enter ID of Contact to delete: "
#     read ID
#
#     # check if ID is integer
#
#     # check if ID is in the list to ensure na ung dinedelete na id is valid
#
#     # saka i-delete
#     deleteContact "$ID"
#
#     Menu.AnyKeyToMenu
#     deleteContact.unset
# }
